name: main
on:
  push:
  release:
    types:
    - published
jobs:
  build:
    strategy:
      matrix:
        platform:
        - x86
        - x64
        configuration:
        - Debug
        - Release
    runs-on: windows-2019
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build
      run: |
        $VS = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
        Start-Process "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList $('update --installPath "{0}" --quiet' -f $VS) -NoNewWindow -Wait
        Start-Process "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList $('modify --installPath "{0}" --quiet --add Microsoft.VisualStudio.Component.VC.14.26.x86.x64' -f $VS) -NoNewWindow -Wait
        Get-Item $env:TEMP\dd_* | Where-Object LastWriteTime (Get-Date).AddHours(-1) -GT | Get-Content
        & "$VS\MSBuild\Current\Bin\MSBuild.exe" ffftp.sln /p:Platform=$('${{matrix.platform}}' -replace 'x86', 'Win32') /p:Configuration=${{matrix.configuration}}
        & "$VS\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" test\${{matrix.configuration}}\${{matrix.platform}}\test.dll
    - name: Upload artifacts (ffftp)
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.platform}}-${{matrix.configuration}}-ffftp
        path: ${{matrix.configuration}}/${{matrix.platform}}
    - name: Upload release asset (msi)
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{github.event.release.upload_url}}
        asset_path: ${{matrix.configuration}}/ffftp-${{matrix.platform}}.msi
        asset_name: ffftp-${{github.event.release.tag_name}}-${{matrix.platform}}.msi
        asset_content_type: application/octet-stream
    - name: Upload release asset (zip)
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{github.event.release.upload_url}}
        asset_path: ${{matrix.configuration}}/ffftp-${{matrix.platform}}.zip
        asset_name: ffftp-${{github.event.release.tag_name}}-${{matrix.platform}}.zip
        asset_content_type: application/zip
    - name: Upload release asset (pdb)
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{github.event.release.upload_url}}
        asset_path: ${{matrix.configuration}}/${{matrix.platform}}/ffftp.pdb
        asset_name: ffftp-${{github.event.release.tag_name}}-${{matrix.platform}}.pdb
        asset_content_type: application/octet-stream
